{"version":3,"sources":["components/DataList/dataList.tsx","components/Pagination/pagination.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["DataList","posts","className","map","item","id","title","Pagination","props","useState","currentPage","setCurrentPage","useEffect","pageChange","onClick","onChange","e","value","target","test","parseInt","allPagesNumber","fetchData","url","a","fetch","response","json","App","data","setData","displayedData","setDisplayedData","allPages","Math","ceil","length","onPageChange","page","startItem","endItem","slice","then","itemsPerPage","itemsNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RA0BeA,EAnBoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEpC,OACE,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SAEID,EAAME,KAAI,SAACC,GACT,OACE,8BACIA,EAAKC,GADT,MACkBD,EAAKE,QADfF,EAAKC,YC8DZE,G,MAnEsB,SAACC,GAAW,IAAD,EACRC,mBAAiB,GADT,mBACvCC,EADuC,KAC1BC,EAD0B,KAG9CC,qBAAU,WACRJ,EAAMK,WAAWH,KAChB,CAACA,IAwBJ,OACE,sBAAKR,UAAU,wBAAf,UACE,qBACEA,UAAS,oDAA+D,IAAhBQ,EAAoB,+BAAiC,IAC7GI,QAAS,WAzBbH,EAAe,IAuBb,mBAMA,qBACET,UAAS,uDAAkE,IAAhBQ,GAAqB,gCAChFI,QAAS,WAnBbH,EAAeD,EAAc,IAiB3B,sBAMA,sBAAKR,UAAU,0BAAf,UACE,uBAAOA,UAAU,2BACVa,SAAU,SAACC,GAAD,OAtBAC,EAsBqBD,EAAEE,OAAOD,WArBrC,aACUE,KAAKF,IAChBN,EAAeS,SAASH,EAAO,MAHxB,IAACA,GAuBVA,MAAOP,IAHhB,IAME,+BAAOF,EAAMa,oBAEf,qBACEnB,UAAS,mDAA8CQ,IAAgBF,EAAMa,gBAAkB,gCAC/FP,QAAS,WArCbH,EAAeD,EAAc,IAmC3B,kBAMA,qBACER,UAAS,mDAA8CQ,IAAgBF,EAAMa,gBAAkB,iCAC/FP,QAAS,WA/CbH,EAAeH,EAAMa,iBA6CnB,uBC7DAC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOC,MAAMF,GADb,cACVG,EADU,gBAEHA,EAASC,OAFN,mFAAH,sDAgCAC,EA3BO,WAAO,IAAD,EACFnB,mBAAkB,IADhB,mBACnBoB,EADmB,KACbC,EADa,OAEgBrB,mBAAkB,IAFlC,mBAEnBsB,EAFmB,KAEJC,EAFI,KAIpBC,EAAWC,KAAKC,KAAKN,EAAKO,OADX,IAGfC,EAAe,WAAuB,IAAtBC,EAAqB,uDAAN,EAC7BC,EAJa,IAIAD,EAAO,GACpBE,EALa,GAKHF,EAChBN,EAAiBH,EAAKY,MAAMF,EAAWC,KASzC,OANA5B,qBAAU,WAERU,EADY,8CACGoB,MAAK,SAAAb,GAAI,OAAIC,EAAQD,MACpCQ,MACC,CAACR,EAAKO,SAGP,sBAAKlC,UAAU,kBAAf,UACE,4CACA,cAAC,EAAD,CAAUD,MAAO8B,IACjB,cAAC,EAAD,CAAYV,eAAgBY,EAAUU,aAAc,GAAIC,YAAaf,EAAKO,OAAQvB,WAAYwB,QCnBrFQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d3e6b6f.chunk.js","sourcesContent":["import React from 'react';\nimport { IPost } from './../data.model'\n\ninterface IProps {\n  posts: IPost[]\n}\n\nconst DataList: React.FC<IProps> = ({ posts }) => {\n\n  return (\n    <div className=\"list__container\">\n      <div className=\"list_data\">\n        {\n          posts.map((item: IPost) => {\n            return (\n              <p key={item.id}>\n                { item.id } - { item.title }\n              </p>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default DataList;\n","import React, { useEffect, useState} from 'react';\r\nimport './styles.css'\r\n\r\ninterface IProps {\r\n  allPagesNumber: number\r\n  itemsPerPage: number\r\n  itemsNumber: number\r\n  pageChange: (page: number) => void\r\n}\r\n\r\nconst Pagination: React.FC<IProps> = (props) => {\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    props.pageChange(currentPage)\r\n  }, [currentPage])\r\n\r\n  const onFirstPage = (): void => {\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  const onLastPage = (): void => {\r\n    setCurrentPage(props.allPagesNumber);\r\n  }\r\n\r\n  const onNextPage = (): void => {\r\n    setCurrentPage(currentPage + 1);\r\n  }\r\n\r\n  const onPreviousPage = (): void => {\r\n    setCurrentPage(currentPage - 1);\r\n  }\r\n\r\n  const validateInput = (value: string) => {\r\n    const regex = /^[0-9\\b]+$/\r\n    const regexTest = regex.test(value)\r\n    regexTest && setCurrentPage(parseInt(value, 10))\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination__container\">\r\n      <div\r\n        className={`pagination__button pagination__page-first ${currentPage === 1 ? 'pagination__button--disabled' : ''}`}\r\n        onClick={() => onFirstPage()}\r\n      >\r\n        First\r\n      </div>\r\n      <div\r\n        className={`pagination__button pagination__page-previous ${currentPage === 1 && 'pagination__button--disabled'}`}\r\n        onClick={() => onPreviousPage()}\r\n      >\r\n        Previous\r\n      </div>\r\n      <div className=\"pagination__page-active\">\r\n        <input className=\"pagination__current-page\"\r\n               onChange={(e) => validateInput(e.target.value)}\r\n               value={currentPage}\r\n        />\r\n         /\r\n        <span>{props.allPagesNumber}</span>\r\n      </div>\r\n      <div\r\n        className={`pagination__button pagination__page-next ${currentPage === props.allPagesNumber && 'pagination__button--disabled'}`}\r\n        onClick={() => onNextPage()}\r\n      >\r\n        Next\r\n      </div>\r\n      <div\r\n        className={`pagination__button pagination__page-last ${currentPage === props.allPagesNumber && ' pagination__button--disabled'}`}\r\n        onClick={() => onLastPage()}\r\n      >\r\n        Last\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from 'react';\nimport './app.css';\nimport DataList from './components/DataList/dataList';\nimport Pagination from \"./components/Pagination/pagination\";\nimport { IPost } from \"./components/data.model\";\n\nconst fetchData = async (url: string): Promise<IPost[]> => {\n  const response = await fetch(url);\n  return await response.json();\n}\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<IPost[]>([]);\n  const [displayedData, setDisplayedData] = useState<IPost[]>([]);\n  const itemsPerPage = 10;\n  const allPages = Math.ceil(data.length / itemsPerPage);\n\n  const onPageChange = (page: number = 1) => {\n    const startItem = (page - 1) * itemsPerPage;\n    const endItem = page * itemsPerPage;\n    setDisplayedData(data.slice(startItem, endItem))\n  }\n\n  useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/posts';\n    fetchData(url).then(data => setData(data));\n    onPageChange()\n  }, [data.length])\n\n  return (\n    <div className=\"main__container\">\n      <h1>Pagination</h1>\n      <DataList posts={displayedData} />\n      <Pagination allPagesNumber={allPages} itemsPerPage={10} itemsNumber={data.length} pageChange={onPageChange} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}